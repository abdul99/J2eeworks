package tutorial;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "usr") // @Table is optional, but "user" is a keyword in many SQL variants 
@NamedQuery(name = "User.findByName", query = "select u from UserC u where u.name = :name")
public class UserC {
    @Id // @Id indicates that this it a unique primary key
   // @GeneratedValue(strategy = GenerationType.AUTO) // @GeneratedValue indicates that value is automatically generated by the server
   // @GeneratedValue(strategy = GenerationType.SEQUENCE, generator="judgements_id_seq")
   
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator="UserC_id_seq")
    @SequenceGenerator(name="UserC_id_seq", sequenceName="UserC_id_seq", allocationSize=1)
    private Long id;

    @Column(length = 32, unique = true)
    // the optional @Column allows us makes sure that the name is limited to a suitable size and is unique
    private String name;

    // note that no setter for ID is provided, Hibernate will generate the ID for us

    public long getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

	@ManyToMany
    private final Set<RoleC> roles = new HashSet<RoleC>();

    public boolean addRole(RoleC role) {
        return roles.add(role);
    }

    public Set<RoleC> getRoles() {
        return roles;
    }
}